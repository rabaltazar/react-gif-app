{"version":3,"sources":["reportWebVitals.js","components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","categories","type","value","onChange","target","getGifts","a","category","url","fetch","data","json","gifts","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","imgs","useFetchGifts","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,cCmBCQ,EAvBK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACDC,mBAAS,IADR,mBAC9BC,EAD8B,KAClBC,EADkB,KAarC,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACuB,KAAtBJ,EAAWK,SACdP,GAAc,SAAAQ,GAAU,OAAKN,GAAL,mBAAoBM,OAC5CL,EAAc,MAId,SACI,uBACIM,KAAM,OACNC,MAAOR,EACPS,SAhBS,SAAAN,GACjBA,EAAEC,iBACFH,EAAcE,EAAEO,OAAOF,a,+BCPlBG,EAAQ,uCAAG,qCAAAC,EAAA,6DAAQC,EAAR,EAAQA,SACtBC,EADc,iDACkCD,EAASR,OAD3C,+DAEGU,MAAMD,GAAKvB,MAAK,SAAAyB,GAAI,OAAIA,EAAKC,UAFhC,uBAEZD,EAFY,EAEZA,KACFE,EAAQF,EAAKG,KAAI,SAAAC,GAAG,YAAK,CAC3BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXR,IAAG,UAAEM,EAAIG,cAAN,aAAE,EAAYC,iBAAiBV,QANlB,kBAQbI,GARa,2CAAH,sDCWNO,EATK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOR,EAAS,EAATA,IAC7B,OACI,sBAAKY,UAAU,+CAAf,UACI,qBAAKC,IAAKb,EAAKc,IAAKN,IACpB,4BAAIA,QCcDO,EAhBC,SAAC,GAAkB,IAAhBhB,EAAe,EAAfA,SAAe,ECDL,SAACA,GAAc,IAAD,EACbd,mBAAS,CAC/BiB,KAAK,GACLc,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAavC,OARAC,qBAAU,WACNtB,EAAS,CAACE,aACTtB,MAAK,SAAA2C,GAAI,OAAIF,EAAS,CACnBhB,KAAMkB,EACNJ,SAAS,SAEf,CAACjB,IAEIkB,EDX0BI,CAActB,GAAlCU,EADiB,EACtBP,KAAac,EADS,EACTA,QACrB,OACI,qCACA,6BAAKjB,IACHiB,GAAW,mBAAGJ,UAAU,wBAAb,qBACT,qBAAKA,UAAU,YAAf,SACKH,EAAOJ,KAAI,SAAAC,GAAG,OAAK,cAAC,EAAD,eAEZA,GADCA,EAAIC,aEcde,EAtBM,WAAO,IAAD,EAEarC,mBAAS,CAAC,gBAFvB,mBAEhBO,EAFgB,KAEJR,EAFI,KAIvB,OACI,qCACI,4CACA,cAAC,EAAD,CACIA,cAAeA,IAEnB,uBACA,6BACKQ,EAAWa,KAAI,SAAAN,GAAQ,OACnB,cAAC,EAAD,CAEGA,SAAUA,GADLA,YCX7BwB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BpD,M","file":"static/js/main.949a6412.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleChange = e => {\r\n        e.preventDefault();\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim() === '') return;\r\n        setCategories(categories => [inputValue, ...categories]);\r\n        setInputValue('')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type={\"text\"}\r\n                value={inputValue}\r\n                onChange={handleChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nexport default AddCategory;\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifts = async ({category}) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category.trim()}&limit=10&api_key=TC2Q7CIuAsSQweGI8WPf4xFaFD87kupb`\r\n    const { data } = await fetch(url).then(data => data.json());\r\n    const gifts = data.map(img => ({\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n    }));\r\n    return gifts;\r\n}","import React from 'react';\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__jackInTheBox\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;","import React from 'react';\r\nimport { useFetchGifts } from '../hooks/useFetchGifts';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n    const { data:images, loading } = useFetchGifts(category);\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        { loading && <p className='animate__jackInTheBox'>Loading</p>}\r\n            <div className=\"card-grid\"> \r\n                {images.map(img => (<GifGridItem\r\n                    key={img.id}\r\n                    {...img}>\r\n                </GifGridItem>))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;","import { useState, useEffect } from 'react';\r\nimport { getGifts } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifts = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    })\r\n    useEffect(() => {\r\n        getGifts({category})\r\n        .then(imgs => setState({\r\n            data: imgs,\r\n            loading: false\r\n        }))\r\n    },[category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert</h2>\r\n            <AddCategory\r\n                setCategories={setCategories}\r\n            />\r\n            <hr />\r\n            <ol>\r\n                {categories.map(category =>\r\n                    (<GifGrid\r\n                        key={category}\r\n                        category={category}\r\n                    />)\r\n                )}\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}